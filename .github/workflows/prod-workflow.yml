name: Production Environment Deployment

on:
  workflow_dispatch:
    inputs:
      confirm_deployment:
        description: 'Confirm production deployment'
        required: true
        type: boolean

jobs:
  prod-terraform-plan:
    runs-on: ubuntu-latest
    environment: prod
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init and Plan
        id: plan
        run: |
          cd infra/tf/prod
          terraform init
          terraform plan -no-color -out=tfplan

  prod-terraform-apply:
    runs-on: ubuntu-latest
    needs: [prod-terraform-plan]
    environment:
      name: prod
      url: ${{ steps.get-url.outputs.url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init and Apply
        run: |
          cd infra/tf/prod
          terraform init
          terraform apply -auto-approve

  prod-build-and-deploy:
    runs-on: ubuntu-latest
    needs: [prod-terraform-apply]
    environment:
      name: prod
      url: ${{ steps.get-url.outputs.url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Application
        env:
          NODE_OPTIONS: '--openssl-legacy-provider'
        run: |
          cd infra/tf/prod
          terraform init
          export S3_BUCKET=$(terraform output -raw s3_bucket_name)
          export CLOUDFRONT_ID=$(terraform output -raw cloudfront_distribution_id)
          
          cd ../../..
          
          rm -rf node_modules yarn.lock
          yarn install --frozen-lockfile
          
          # Build the application
          yarn build
          
          aws s3 sync build/ s3://$S3_BUCKET --delete
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"